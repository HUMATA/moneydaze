@inject IBudgetService BudgetService

<div class="row">
    <div class="col-md-4">
        <input class="form-control" bind="@outgoing.Description" placeholder="Enter Description..." />
    </div>
    <div class="col-md-2">
        <select class="form-control" bind="@outgoing.Category">
            <option value=@Category.General>General</option>
            <option value=@Category.Bills>Bills</option>
            <option value=@Category.EatingOut>Eating Out</option>
            <option value=@Category.Entertainment>Entertainment</option>
            <option value=@Category.Food>Food</option>
            <option value=@Category.Holidays>Holidays</option>
            <option value=@Category.Shopping>Shopping</option>
            <option value=@Category.Transport>Transport</option>
            <option value=@Category.Misc>Misc</option>
        </select>
    </div>
    <div class="col-md-2">
        <input class="form-control" bind="@outgoing.Amount" placeholder="Enter Amount..." />
    </div>
    <div class="col-md-4">
        <button onclick="@AddOutgoing" class="btn btn-primary"><i class="glyphicon glyphicon-plus"></i> Add Item</button>
        <button onclick="@CancelAddItem" class="btn btn-default"><i class="glyphicon glyphicon-cross"></i> Cancel</button>
    </div>
</div>

@functions {

    [Parameter]
    private Action OnOutgoingAdded { get; set; }

    [Parameter]
    private Action OnCancelAdd { get; set; }

    private Outgoing outgoing;

    protected override void OnInit()
    {
        outgoing = new Outgoing();
    }

    void AddOutgoing()
    {
        BudgetService.AddOutgoing(outgoing);

        OnOutgoingAdded?.Invoke();
    }

    private void CancelAddItem()
    {
        OnCancelAdd?.Invoke();
    }

}